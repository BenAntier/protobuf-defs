// Code generated by protoc-gen-go.
// source: session.proto
// DO NOT EDIT!

package logger

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Session represents information about a user session.
type Session struct {
	// id represents the session id
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// user_agent represents the user agent as sent by the browser.
	UserAgent string `protobuf:"bytes,2,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	// wurfl is an instance of Wurfl defined in wurfl.proto.
	Wurfl *Wurfl `protobuf:"bytes,3,opt,name=wurfl" json:"wurfl,omitempty"`
	// adblocker represents the adblocker status of the session.
	Adblocker bool `protobuf:"varint,4,opt,name=adblocker" json:"adblocker,omitempty"`
	// is_bot if true means the user was detected as a bot.
	IsBot bool `protobuf:"varint,5,opt,name=is_bot,json=isBot" json:"is_bot,omitempty"`
}

func (m *Session) Reset()                    { *m = Session{} }
func (m *Session) String() string            { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()               {}
func (*Session) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *Session) GetWurfl() *Wurfl {
	if m != nil {
		return m.Wurfl
	}
	return nil
}

func init() {
	proto.RegisterType((*Session)(nil), "logger.Session")
}

func init() { proto.RegisterFile("session.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2e,
	0xce, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcb, 0xc9, 0x4f, 0x4f, 0x4f,
	0x2d, 0x92, 0xe2, 0x2e, 0x2f, 0x2d, 0x4a, 0xcb, 0x81, 0x08, 0x2a, 0x4d, 0x62, 0xe4, 0x62, 0x0f,
	0x86, 0x28, 0x13, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02,
	0xb2, 0x84, 0x64, 0xb9, 0xb8, 0x4a, 0x8b, 0x53, 0x8b, 0xe2, 0x13, 0xd3, 0x53, 0xf3, 0x4a, 0x24,
	0x98, 0xc0, 0xe2, 0x9c, 0x20, 0x11, 0x47, 0x90, 0x80, 0x90, 0x32, 0x17, 0x2b, 0xd8, 0x24, 0x09,
	0x66, 0xa0, 0x0c, 0xb7, 0x11, 0xaf, 0x1e, 0xc4, 0x7c, 0xbd, 0x70, 0x90, 0x60, 0x10, 0x44, 0x4e,
	0x48, 0x86, 0x8b, 0x33, 0x31, 0x25, 0x29, 0x27, 0x3f, 0x39, 0x3b, 0xb5, 0x48, 0x82, 0x05, 0xa8,
	0x90, 0x23, 0x08, 0x21, 0x20, 0x24, 0xca, 0xc5, 0x96, 0x59, 0x1c, 0x9f, 0x94, 0x5f, 0x22, 0xc1,
	0x0a, 0x96, 0x62, 0xcd, 0x2c, 0x76, 0xca, 0x2f, 0x49, 0x62, 0x03, 0xbb, 0xcd, 0x18, 0x10, 0x00,
	0x00, 0xff, 0xff, 0x46, 0x1a, 0xb6, 0xcc, 0xc1, 0x00, 0x00, 0x00,
}
