// Code generated by go-bindata.
// sources:
// rpc.swagger.json
// DO NOT EDIT!

package logger

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _rpcSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x3c\xfd\x73\xda\x3a\xb6\xbf\xf7\xaf\xd0\xe4\xbd\x37\x81\x5b\x42\x48\xd2\x9b\x3b\x4d\xa7\x3f\xa4\x09\xed\xb2\x4d\x03\x1b\xc8\xf6\xcd\x5d\xee\x10\x63\x0b\xf0\xad\x91\x58\x49\x86\xd2\xfb\xfa\xbf\xbf\x73\x24\xd9\x96\x8d\x4d\x42\x93\xcc\xee\xce\xdc\x4e\x93\x60\x7d\x1c\x9d\x2f\x9d\x2f\xc9\xfc\xf1\x82\x90\x3d\xb9\xf2\xa6\x53\x2a\xf6\xce\xc8\xde\x71\xb3\xb5\xd7\xc0\xb6\x90\x4d\x38\x34\x60\x3f\x3c\xa9\x50\x45\x14\xfb\xc5\xc2\x6f\x2e\x04\x57\x5c\x8f\x82\x9e\x25\x15\x32\xe4\x0c\xfb\xec\x47\xc2\xb8\x22\x92\xaa\x3d\x18\xf0\x5d\xc3\x92\xfe\x8c\xce\xa9\x84\x31\xff\x30\x93\x66\x4a\x2d\x12\x00\xf8\x59\xe2\xd8\xdf\xf4\x58\x9f\x33\x19\xe7\x06\x7b\x8b\x45\x14\xfa\x9e\x02\xd0\x87\xbf\x4b\x58\x2a\x1d\x0b\x88\x04\xb1\xff\xc0\xb1\x9e\x9a\xc9\x8c\xa0\xc3\xe5\xd1\x61\xc4\xa7\x87\x54\x08\x2e\xd2\x66\x1c\xc7\xa5\x72\x9e\x11\xfb\x78\x3e\xf7\xc4\x1a\x29\xbc\xe2\xd3\x36\x4e\x20\xa1\x24\x1e\x23\x37\xbd\x0b\x42\x59\xb0\xe0\x21\x53\x64\x02\xcd\x00\x71\x1a\xb2\x29\xf6\x69\xc0\x4d\x4b\xa4\x86\xc3\x17\x54\x68\xcc\x3a\x81\x0b\xcb\x1d\x22\xa8\x5c\x00\xfd\x54\xe6\x30\x80\x8e\xe3\x56\xab\xd0\x04\x8d\x01\x95\xbe\x08\x17\xca\xb2\xff\xd2\x79\x6c\xe4\x47\x6a\x01\x78\x1b\x10\xa0\xe7\xbf\x05\x9d\xe0\xe4\xff\x3a\x0c\xe8\x24\x64\x21\xce\x96\x87\x5a\xc2\xe3\x78\xd2\x9e\x2f\xd4\x7a\x2f\x37\xe7\xfb\x8b\xb2\xcf\xdf\x1d\x22\x16\x9e\xf0\xe6\x54\x81\x32\xa4\x72\x31\xff\x0a\xe8\x33\x18\x85\x4b\x8f\x79\xb0\x2e\x22\x1c\xb2\xaa\x1e\x41\xff\x19\x87\x82\x22\x0b\x95\x88\xe9\x23\x09\x45\x81\x51\x61\xe4\xf0\x00\x32\x7f\x73\xc8\x54\xde\xb4\x48\x20\xca\x14\xf7\x51\x36\xfe\x85\x0b\xc1\x32\x29\xd3\xbd\x25\x65\x6a\x27\xdd\xc3\x09\x0f\xd1\x3d\x1c\x77\x9f\xee\xe9\xc5\xff\xd4\xbd\x7f\xb9\xee\x69\x39\x3c\xbf\xee\xa5\xc6\xd8\x41\x21\x33\x87\x7a\x07\x5c\xf0\x80\xba\xea\xa8\xd6\x0b\xcd\x24\xa9\x04\x28\x56\xca\x8c\x3d\xca\xe2\x79\x6e\xf5\xbd\xdb\xeb\x8f\xd7\xdd\xcf\xd7\xae\x3a\xf5\x2f\x6e\x3a\xbd\xc1\xe8\xaa\x7b\x7e\xd9\xb9\xfe\xe0\xf6\x80\xe6\x8e\x2e\xce\xaf\xae\xdc\xb6\xbf\x0c\x06\xbd\x8d\xc6\xf3\xcb\x51\xbf\x7d\xf3\xf7\xf6\x8d\xdb\x78\xd9\xfd\x34\xba\xee\x0e\x46\xef\xbb\xb7\xd7\x97\x09\xb5\x29\x6f\x90\x3a\x2f\x8e\x70\x17\x6d\x20\x95\x39\x31\x24\x94\x68\x3e\x50\x49\xd4\x8c\x12\x1f\x1b\xf8\x44\x7f\xa6\x99\x31\x48\x36\xec\x07\xca\x3b\x8b\x8e\x5c\x94\x31\x87\x8f\x7f\xa7\x7e\xb6\x91\xd0\x27\xc1\x5e\x53\x61\x61\x1f\xed\x79\xb1\xe2\x8c\xcf\x79\x2c\x47\x72\x2d\x15\x9d\x8f\x80\x8b\x63\x2a\x8a\xbb\x2d\x81\x0b\xdb\x9a\xa2\x3c\x5d\x25\xdb\x83\x7d\x3e\xf7\x94\xed\x3e\x7d\x95\xef\x2c\x6c\xc9\xaa\x05\x09\xd8\x8a\xf3\xfe\x35\xa9\x79\xd2\xf2\x20\x20\xe0\xb4\x3f\x87\x5f\xc2\x05\x0d\x42\xaf\xae\x0d\xcc\x90\xf9\x3c\x8a\x80\x32\x74\xe8\xc0\x19\x70\xcb\x0c\x9e\x60\x6c\x07\x10\x13\x8c\x2a\xd2\xc3\x8d\x0a\xa3\x48\xad\xd3\xab\x13\xc1\x63\x85\xe6\x67\x01\xba\x1e\x7e\x05\xbe\xc6\x2c\xa0\x62\xc8\x0c\x7b\x99\x12\x30\x10\xe0\x70\x46\x11\x81\x39\x17\x94\x00\x90\x15\x17\x5f\x88\x31\x4e\x5c\x48\xc4\x63\x4c\x67\x5e\x34\xc1\xa1\x1e\x91\x00\x30\xa2\x43\xe6\x05\x73\x50\x59\x50\x43\x30\x61\x4b\x90\x10\x03\x49\xae\x11\x4c\xc0\xe7\x5e\xc8\x40\x6c\x9e\xc2\x85\x25\xf4\x00\xee\xb0\xde\x7c\xce\x59\x83\xf8\x11\xf5\x44\xb4\x1e\xb2\x84\xce\x14\x49\x0e\x51\xc2\x9a\x28\xae\x25\x9e\x50\xd4\xdc\x2b\xb5\x29\x9b\x8c\xe4\x62\xea\xb1\xf0\x9b\x67\x59\x5d\x2a\xbf\xc2\xa6\x29\x88\xaf\xac\x37\x55\xcf\xed\x0b\xa2\x78\x10\x6b\xd3\x26\x4d\x5b\x6d\xd0\xbd\xec\x9e\x59\x79\x42\x77\x28\xeb\xe5\xc4\x58\xc3\xf7\x44\x28\x17\x54\x0e\x81\x13\x41\x53\x49\x68\xe6\xf6\x7b\x04\xdb\x2b\x98\xfb\x3c\xac\x2c\xe0\x95\x63\x5f\x01\x3f\x8d\xb3\xdd\xfa\x2e\x4b\x5d\x7c\x5f\x14\xf0\x2e\xc2\x07\xd3\xb0\x41\x36\x34\x59\xa8\xb1\xa4\xa2\x99\x37\x28\x3d\x6f\x4a\xfb\x3a\x28\x7e\x32\x7b\x8b\x16\xb4\xf8\xdc\xdf\xcd\x3e\x16\xa8\x32\x08\xa6\x76\x12\xb6\x23\x38\x3d\xdf\x04\x1b\x48\x97\x89\xea\x0b\x94\x19\xa7\x76\x1e\xdc\x80\xab\xa4\xb9\x68\xa6\x68\x31\x4b\xa6\x5d\xd2\x65\xe8\x97\xb2\xe4\xa1\x56\x36\x0c\x9e\x4d\x89\xc2\x80\xf8\x1e\xda\x27\xc2\x63\x01\x26\x86\x7f\x09\x29\x09\x83\x06\xe9\x5c\xbe\x3f\xd7\x46\xf5\xbc\x73\x59\xa1\xe5\x16\x89\x1c\x62\xdb\x82\x02\xc3\x88\x01\xce\xda\x86\x12\x0e\x28\x2a\x1e\x2e\x95\x68\x9e\x45\x12\x0d\xa5\x06\x08\xe8\xc2\x70\x9f\x8b\x00\x6c\xa1\xb6\x9b\xd8\x34\x64\x63\x1a\xf1\xd5\x2e\x0a\x6f\xf0\x73\x97\xf6\x92\x25\x3a\x97\xb8\x9e\x97\xac\x0d\x8f\x01\x5d\x40\xa0\x8a\x66\x17\x76\xdf\x6a\x46\x05\x35\x7e\x16\x03\x9f\x21\x5b\x81\x1b\x42\x10\x64\x22\xf8\xbc\x54\x99\x1c\x66\x3c\xd5\x66\xb9\x6c\xf7\x3f\x0e\xba\x10\x71\x74\xbb\x1f\x3b\x6d\xb7\xe7\x53\xf7\x5d\xe7\xaa\x5d\xd2\x81\x52\xce\x05\x27\x20\xed\x47\x6d\xaf\x03\x62\x47\x9c\x25\x1f\x12\xcb\x6e\x81\x38\x1c\xf5\x58\x40\xe4\x8c\xc7\x51\x80\xfa\x87\x29\x72\x08\xce\x55\x0b\x71\xe9\x45\x61\xd0\x1c\x32\x72\x40\xf2\x54\x9d\x15\x9e\xf3\xd2\xca\xc4\xa3\x9d\x67\x4e\x0a\x5a\x98\xf2\x8b\xe2\x0b\x50\x0d\xc1\x57\x68\xbf\xf4\x02\x39\xe6\x9c\xe5\x1f\x77\x02\x3f\xe7\xe3\x30\xa2\x64\x31\x83\x70\xa0\xb0\x06\xf2\xf9\xcc\xec\x29\x17\x22\xb8\xbd\x00\xfd\xfe\x24\x84\x08\x06\x2d\x90\x17\x2c\xd1\x00\xc0\x3c\xa9\xd9\x83\x41\xcb\xd2\x0b\x23\x6f\x0c\x80\x39\x8b\x20\x3e\x60\x43\x16\x76\xfb\x96\x8d\xd2\x80\x47\xb1\x9d\xe9\xdf\x4f\x01\xfe\x9c\x05\x82\xc3\xa6\x4a\x96\x28\x89\x35\xef\xdb\xa3\xa9\x90\xcb\x54\xbf\x5d\xac\x4e\xec\x6a\x0f\xfd\x7c\x48\xbf\xc5\xf0\x64\x19\xc0\x36\x8b\xa3\x03\x65\x93\x80\x86\x4c\x2a\x8f\xf9\x9a\x10\x27\xa0\x0e\x88\x37\xe6\xcb\x2a\x77\xef\xc7\x52\xf1\x79\x95\x8d\x2e\x50\xa5\xfb\xbc\x20\xd0\x18\x7a\x51\xaf\x9c\xc6\x6d\xd6\xc0\xf6\x6e\xd8\x79\x37\xc1\xda\x4a\xae\x46\x57\x13\x4c\xe6\xde\x62\x18\xb7\x5a\x27\xbe\x81\xd1\x20\xe6\xaf\x6e\xa3\x46\xcd\x43\xe6\x47\x71\x80\xbe\x92\xad\x49\xe0\x29\xcf\x34\x7b\x64\x11\x8f\xa3\x50\xce\x30\x1e\x5e\xe1\x5f\x89\xa1\xa7\x1d\x4d\x56\xa1\x9a\x39\x59\x7b\x29\xdf\xe6\x54\x4a\x88\x19\x9e\xcd\xb9\x59\xf8\x89\x05\xd2\x39\x10\xb1\x8d\x55\x91\x1b\x1b\x01\x08\x4a\x2b\xc3\xb6\x31\xe7\x10\x7f\xb3\x2a\xac\x4a\xbb\x8b\x81\x5b\xb2\x46\x83\x84\x13\x93\x73\x67\xbe\x83\x68\xdd\xc5\xc4\x41\xdb\x97\x65\x28\x43\xb3\x39\x6d\x74\x82\xf3\x2a\x70\x4f\xe5\xb1\x8b\x53\xee\xa5\x93\xb6\xa1\x9c\x82\x2e\xd9\x26\x29\x84\x74\xaf\x80\x13\x4e\x27\x98\xba\x6a\x05\xc6\x00\xc4\xff\x32\x82\x0c\xc8\x7f\x3e\x25\x70\xd6\x40\xe4\xb5\x95\xcb\x8c\x1e\x08\x20\x54\xfb\x9a\x26\xfa\xd5\xa7\x7a\x56\x66\xdd\x7d\x2f\x9e\xce\xaa\xb4\x57\x85\xa0\x4a\xca\x9b\x2f\x1e\xc6\xee\xa4\x02\x34\x48\xa7\x6d\xc3\x3a\x05\x9e\x28\x6f\xd6\x00\x2c\x87\x78\x83\x91\xa9\x58\xf8\x07\x46\x88\x64\x06\xc8\x42\x0c\x04\x56\x17\xd8\x8f\xc3\xb7\x6b\x39\x06\xef\xbb\x28\xc9\xad\xbc\x47\x3f\x10\x60\x89\x6a\xe0\x3c\x57\x2b\x74\xd2\xb0\xa1\x10\xf7\xc5\x65\xa6\x38\xbd\x11\xb1\xa7\xee\xc7\xd6\x07\xf7\xf5\xfe\xde\x6f\x58\x13\xa4\x5b\x4d\x0d\x04\x5d\x9d\x17\x45\xc8\x98\x21\x13\x34\xf2\x94\x46\xc7\xa8\x51\x96\x15\x15\xbc\x54\xb1\x8e\xb9\x73\x6d\x24\x18\x89\x8d\x7c\xe1\x5e\x56\x67\x49\x46\x45\x1a\x9d\x42\x2d\xfa\x5f\xa7\x47\x2b\x30\x04\x54\x3e\x15\x4c\xea\xc4\x39\x55\x08\x32\xc0\xa7\x50\x0e\x59\x61\x27\x60\x7c\x70\xd2\x6a\x11\xe3\x0e\xde\x1a\x77\x6e\x1e\xc8\xcf\xad\xd6\x9f\x9e\xef\x29\x3d\xdf\x9f\x6e\xa6\x14\xe5\x67\x72\x33\xff\xc1\x96\x7a\xd7\x1c\x5b\x5b\xad\x7b\x53\x6c\xbd\xb7\x37\x59\xac\xa3\x7a\x4c\x35\x89\x53\x45\xdd\x16\xf8\xfe\x87\xf9\x11\xad\xf8\x0f\xf0\x23\x38\x6e\xbf\x68\x02\x8c\x41\xb4\xae\xc4\x54\x80\x77\x72\x25\x4f\x9a\xea\xbf\xeb\x76\x07\x78\x08\xd1\xbe\xd1\x67\x11\xed\xcb\x8a\x43\x8a\x42\x47\xbb\xdf\xef\x74\xaf\x47\xbd\xc2\xd9\x45\xef\xfc\x43\x7b\xf4\xf7\x4e\xfb\x73\xee\x40\xa3\xfd\xb7\xdb\x76\x7f\xe0\x36\xdd\x5e\xbf\xef\x5c\x5d\xe5\x61\x6e\xb6\x74\x3e\xf5\x6e\xcc\x42\xb9\xb5\x07\xe7\x37\x39\x60\xfd\x8f\x9d\x5c\x69\xef\xe2\xaa\x73\xf1\xd1\x6d\xf8\xdb\x2d\xcc\x80\x54\xfc\xa8\xac\xf1\xb8\xac\xf1\x24\x07\xaf\xfb\xa9\x77\xd5\x1e\xb4\x1f\x55\xce\xd0\x3b\xc2\x3d\x53\x71\x93\x5c\xd7\xc0\xe7\x05\xae\x8f\x56\x1e\x95\xe1\x86\x6a\xfd\x6c\x11\x31\x02\x4f\x8c\xd5\x24\x86\xb8\x48\x37\x6c\x29\x67\xfb\x3c\x66\x4a\x3c\x23\x42\x06\xbe\xf1\xcb\x6a\xc5\x89\x3f\xf3\x20\x5e\x57\x14\x2b\x92\xa6\xcb\xc4\x71\xd2\x35\x02\x9d\x7e\x97\x9c\x1c\x9d\xfe\x72\x70\x54\x81\x76\x28\x1f\x68\xf0\xd3\x93\xb0\xad\x95\xd2\x92\x72\x78\xbf\x57\xc0\xc9\x31\xe8\xba\x58\xbe\xcd\x78\xce\xa9\x12\x7c\x54\x56\xcb\x78\xb2\xd3\xb2\x6c\x89\x22\xea\x3d\x2c\x52\x91\x73\x41\x4d\x88\x5c\xe5\xea\x39\xd8\xe0\x68\x2b\x8e\x8f\x16\xbe\x59\xe3\xc2\x96\x60\x10\x37\xd3\xb2\x0d\x2f\x74\xb1\xa3\x6f\x40\xc1\x33\x9c\x53\x25\x2e\x5c\xc3\x2f\xb2\x6d\xf0\x2b\xc9\x1d\x30\x0e\x99\xbe\xe8\x73\x76\x78\x08\xe1\xd2\x2a\x39\x6c\x6c\x72\x31\x3d\xc4\xa7\xc3\xab\x50\xaa\x11\x9f\x8c\xd4\xb7\x11\xc6\x8f\x63\x4f\xd2\x51\x0a\x5c\x96\x13\xb7\x7c\xf5\x6c\xbc\x5e\xbe\xda\x50\xe1\x1e\xb4\x41\x4c\x0e\x6d\xb2\x82\xd9\xcb\xd3\xe7\xc3\xe7\xb4\x04\x9f\xd3\x32\x7c\xee\xf3\xed\x7a\x0b\xbb\xc0\xa6\x94\x43\xc8\xe5\xdb\xc3\xc5\xcc\x41\xe3\x96\x8c\x95\x5e\xeb\x76\xf3\x08\xcb\x06\xab\xf9\xa2\xd4\xce\xd6\xdb\x1c\xe0\x3e\x1b\xd7\xec\xf9\x70\x52\x57\x37\x4f\x35\x27\xeb\x85\x6c\x45\xc6\xe3\x03\xd3\x53\x4f\x8f\xb6\x16\xd5\x61\x66\xc4\x21\x7b\x44\xc5\xdc\x2d\x42\xbe\x8c\xcd\xfd\x9b\xad\xe8\xa6\xb0\x53\x8c\xed\x2c\xe2\x7b\x91\x1f\x9b\x10\x6a\x4c\xd5\x0a\x52\x0e\xb2\xcf\xbc\x65\x38\xd5\xdd\x7d\xe5\x09\x08\xc3\x20\xe2\x1a\xb2\x7d\x04\xa2\xc3\xa8\x36\x0b\xf6\x73\x45\x6b\x0d\x72\x7f\x15\xb2\x80\xaf\x9a\x20\x0e\xcd\x4a\x88\x1b\x9b\xb0\x24\x70\x63\x9f\xd8\x42\xfc\x90\xfd\x15\xa6\xf5\x35\x66\xc4\x48\xb2\xca\xea\xe1\x75\x9b\x8d\x0b\x43\xff\xb6\x49\xad\x41\xf7\xc1\x49\x6d\x61\xc3\xfd\x33\xa6\xe0\x5e\x0d\x8c\x4a\x7e\xa8\xd9\xf3\x99\x7f\x00\x9e\x1a\x7e\xfc\x6c\x83\x2b\x54\x56\x52\xc3\x5c\x3a\xd9\xae\x56\xd1\xad\x32\xbb\x78\xd7\x2b\x10\x07\xdd\xa5\x42\x54\xdf\x46\x79\x34\xf2\xc9\x02\x09\x01\xe9\xf3\x03\xb6\x9c\x2c\x9e\x94\xeb\xd6\xf2\xfd\xe6\x9c\xac\x6f\x2d\x75\x9a\xb3\x6d\x40\x86\x02\xdf\x30\xd9\x04\xe7\x84\x0c\xd3\x4e\x2a\x39\xf1\x29\x84\x2b\xf6\x40\x7c\x6b\x9a\x27\xa2\x67\x63\x21\xc0\xce\xc5\xa2\xb7\x37\x57\x4e\x01\x2f\x3b\x91\x6f\x38\x3a\xd0\xc8\xb4\x05\x69\xd2\x65\xbd\x4d\x0d\xbe\xcf\x65\x20\x53\x37\xb3\x41\x05\xd1\xa7\xb9\x23\x94\x94\x0c\x4b\xbc\x87\x47\xf4\xe4\x28\xfc\x42\xcd\xea\x80\x75\x86\x54\xc3\xd1\x05\x88\x63\xa8\xf2\x9b\xcd\x72\x3f\x53\x52\x49\xd9\xd9\xd9\x18\x9a\x46\xcf\x78\x47\x20\x5d\xa1\x70\x1a\x6a\x8b\x69\x81\xb1\x2b\x9a\xfa\xb4\x46\x83\x97\x0a\x24\xc5\x56\xc1\xe3\xe9\xcc\x70\xe9\x77\x30\xc0\x06\x18\x19\x73\xae\xd0\xa6\x83\x07\x26\x1d\xcd\x6a\x30\xd2\x05\x18\x20\x8a\x00\xef\x32\x01\x7e\xd2\xf0\xfa\xfc\xf0\x1d\x64\xde\x54\x2a\x6d\xdb\x80\x1d\x07\xda\x4c\x60\x98\x1b\xfa\xd2\xb4\xc8\x50\x39\x2d\x9a\xf9\x15\x1b\x30\x1e\xbb\x64\x3e\xb8\x88\xd1\x77\xe7\x6d\xe5\x9b\x33\xb0\xa4\xa8\xe1\xc2\x71\x37\xa5\x3b\x6d\x6b\x59\x2b\x8e\x9f\x51\xe8\x08\xbc\xe8\x2b\xa0\x25\xb1\xce\xa9\x90\x4c\x39\x2b\xbd\x7c\xa1\x55\xda\xf7\xf6\x25\x49\xe2\xdd\x9d\xb6\x64\x0a\xb6\x98\xae\xa4\x1d\x35\x30\x67\x46\xf3\xa8\xa8\xa7\x75\x41\xdf\x2b\xdd\x60\x7d\x88\x22\xf3\xd2\xfd\x81\x2a\xfe\x18\xc2\xc8\x2f\xd5\x4e\xe4\x09\x2a\xb5\xe9\x1a\x9b\x25\xfd\xa4\x03\xd4\x46\xc5\x32\x61\xbf\x34\x74\x55\xe5\xbd\x4f\xa8\x15\x69\x5a\xb4\xa9\x0d\x16\x09\xd0\x8a\xaa\xf4\x7b\x34\xe6\x1b\x67\x1f\x4f\xc8\x36\xb3\x40\x52\xdc\x86\x3d\xef\x31\x99\xde\x4d\xd3\x65\xed\x80\x2a\x73\xbd\xd3\x43\x83\x05\x83\xb7\xd4\x31\x47\x60\x49\x58\x25\xba\x8f\xdf\x4f\xe9\x12\x45\x3e\x6a\x6c\x4d\x4f\x72\xa1\x64\xbc\xd6\x3d\xc9\x15\x92\x72\xa4\x57\xb1\x98\x6c\xf8\xe5\x6d\x86\xeb\xb3\x9e\xb0\x0d\x49\x0d\xb2\xc4\x54\xe9\x99\xae\x8d\xd2\x03\x77\xaf\xc0\xda\xfd\xe8\x72\xa0\xcc\xb9\x6a\x8e\xe4\x75\xbc\xb0\xaf\xcb\x4d\x77\xe5\xe6\x2e\xa2\x91\x33\xcc\x49\x85\xd7\xdc\x5b\x51\x90\x59\xd8\x7d\x06\x7c\x48\xed\x1c\x18\xb4\x9c\x5d\x2e\xc3\xea\x56\x3e\xce\x93\x07\xc5\x8b\x82\xf7\x4a\xd4\x5e\x2d\xdc\x9a\x2c\xda\x3b\x72\x1b\x32\x45\x72\xed\x8d\x37\x1b\xfa\x3c\xa4\xe2\x9f\xa4\xd4\xbb\x60\x69\xaa\xa1\xdb\x53\x44\xdf\xab\xf0\x92\x88\xa6\x49\xee\x77\xc0\x72\x51\x72\xab\x64\xeb\xe9\x14\x8e\xdf\x9e\xa5\x4c\xab\x78\xa8\x23\xc1\x5d\x70\x4b\x54\x6a\xf4\x2c\xf2\x2e\x82\x7f\x32\xc9\xcb\x0d\x5f\x7a\x2f\xba\x89\xfb\xdd\x1a\x24\x25\x5e\xa4\x14\xcd\xc4\x60\xdc\x87\xe7\x7d\x86\x47\x1f\x20\x15\xec\x2e\x65\xc1\x81\xb6\x34\x76\xad\x15\x1d\x63\xec\x58\xba\xb5\x3f\x17\x6c\xed\xd6\x6b\xbf\x1b\xd5\x91\x47\xd8\x04\xe6\x31\x5e\x59\x8a\xb8\xbf\x3e\x7c\x72\xbc\x95\xf9\xfd\x70\x8a\xec\x9c\x60\xb1\x1d\xe5\x66\x5f\x50\x80\x78\x0e\x8f\xb9\x14\xd1\xab\x9b\x27\xe0\x1c\x8f\xe2\xe4\xc5\x09\xed\xff\x17\x1e\x1b\x32\x7c\x08\xe7\xb4\x49\x12\x6a\x21\x54\x07\xa1\x61\x4e\xc0\xf4\x7b\x11\x09\x34\xe1\x14\x53\x61\x4d\x73\x4a\x4e\x5a\x43\x76\x67\x46\xc8\x3b\x32\x09\x69\x14\x98\x23\x36\x2c\x02\x87\xfa\xbd\x08\x88\xf7\x18\x9d\x9a\x77\x24\xee\x34\x42\x76\x60\x93\xbc\xc7\x6b\x21\xc9\xb2\x1a\x15\x67\x41\xfb\x3e\x46\x03\x60\x31\xce\x0e\xbe\x51\xc1\xc9\xd2\x8b\x62\x9a\x26\xe7\x39\x68\x64\x0e\x41\x25\x19\x53\x43\x11\x92\x87\x57\xe8\x25\x30\x08\xbd\xb2\x1e\x9e\xc7\xb3\x49\x3e\x99\x19\xe6\xfa\xe7\xc1\xeb\xd7\xaf\x1b\xf6\x07\x72\x14\x4e\x5e\x3a\x0d\xc6\xc9\xc8\x70\xcb\xe6\xd2\xa0\x7f\x2c\xfa\xb8\xff\x1c\xc0\xca\xd9\xae\xe2\x0a\x90\xa4\xf2\xcb\x53\x73\x72\xf4\x73\xe3\xe7\x5f\x4e\x1b\xad\x56\x0b\x7f\x0c\x45\x85\xc6\x72\xaa\xee\xdb\x8a\xe7\xa9\xa6\xe4\xd3\x49\xa9\x71\x6c\x10\x7c\xcf\x26\x38\x88\x28\x9b\x82\x82\xb8\x28\xba\xea\x33\x64\x9e\xb9\x90\x1b\x43\xb4\x04\xfd\x09\x65\xa8\x3b\x39\x6d\x4e\x3b\x5c\x65\xc6\x4b\x40\x89\x36\xeb\xf4\x13\x6f\xc4\x30\x73\xa3\x9b\x1a\x80\x58\x43\xf5\x3d\xc0\x22\xf0\x84\x86\xaa\x6f\xd3\x2c\x94\x4d\x44\x87\x7b\x81\xb7\x1e\xee\x81\xb2\x08\xf8\x3c\xe7\x4c\xcd\x86\x7b\x09\xa8\xe4\x58\x18\x58\x36\xc8\x2e\x07\xb0\x2c\x4d\x0e\xc2\xc9\x84\x0a\x8a\x76\xce\xd6\x3d\x81\xbf\x2b\x77\xb4\x56\x54\x5b\xd3\x4b\xd9\xa5\xeb\x37\x2a\xb9\xaf\xef\x05\x98\x72\xc1\xfa\x10\x97\x28\x7d\x5a\x06\x74\xd9\x9b\xc8\x29\xa0\x26\xb9\xf1\x98\x75\x5d\x0b\xb0\x31\x5f\x43\xd0\x19\x1a\xad\xc9\xcb\x83\x23\x23\xc3\x35\xf5\x04\xde\x22\x1e\xb2\xf6\x57\x98\x10\x51\x72\x74\x46\x2e\xf8\x7c\x11\x43\x1a\x9d\x2e\xad\xe1\xe6\x50\x94\xfa\xfa\x85\xa4\x71\xc0\xcd\x49\x0d\x82\x40\x79\x67\x44\x48\x2c\xe0\x92\xb7\xa4\xd9\x6c\xbe\x29\xf6\x01\x63\x73\x3d\xe9\x4a\x69\x71\x38\xe9\x35\xfd\x49\x73\x33\x11\xe8\x5b\x04\x91\x3e\x1d\x98\xc5\x92\xe7\x37\x85\x49\x5a\xf4\x76\x8a\xf9\x9c\x4c\xd0\x4f\xe9\x2a\x90\x4a\xd4\x36\x56\xb2\x77\xa0\xcc\xcd\xa8\xe3\x53\xf3\xbb\x08\xdb\x56\x58\x5b\x75\xf2\x87\x01\x55\x82\xf2\xcb\xb7\xe4\xe8\xcd\x46\xaf\xc5\x07\xfa\x5a\xc9\x3f\x3b\xe8\x3b\xa1\x91\xa4\x39\xa4\x64\x1e\x2b\xfa\x10\xac\xfc\xed\x58\x1d\x6c\xc1\xea\x65\x19\x56\xae\xae\x1c\x67\xba\x92\xc9\x56\x2b\x4b\xf6\xf8\x32\x13\xee\x0f\xa8\x4c\xb5\x62\x54\x2b\x94\xe9\x73\xf5\xe3\x6d\x5e\x3f\x00\xa7\x22\x1f\xde\x64\x93\x12\x6d\x71\x34\xc4\x9d\xb0\xa9\x32\xd9\xa4\x12\x86\xe7\xd4\xd4\xe5\x75\x36\xab\x94\xcd\x99\xf0\x0b\xe0\xa9\x3b\xba\x62\xa1\x97\xe5\x0b\x95\x6a\x59\x79\xf0\x62\x5e\x54\xde\x3d\xb7\x82\x80\x4a\x47\x96\xef\x39\xcf\x50\x13\x0b\x9f\xbc\xf3\x44\x6d\xca\xf9\x34\xa2\xcd\x64\x8d\xa6\x5e\xa4\x0e\x06\x53\xc5\x78\x51\xb1\xa2\xdf\x55\xbc\x01\x98\xcf\xbf\xf6\xbb\xd7\x99\x33\xb0\x06\x0a\x0c\xe1\x9d\x1e\x7e\xa7\xeb\xdf\xf8\xc9\x0c\x34\xf8\x92\xbb\x3f\xbe\xdf\x95\xbd\xc9\x70\x4e\x20\xf3\xa6\x22\xf4\xed\x9c\xe4\xf4\x5e\x1b\xeb\x35\x8f\xb5\xb9\x15\x14\x23\x45\x34\xe8\xde\xd2\xbc\x19\x81\xa1\x2e\x9b\x82\x52\x98\x6f\x66\x40\xdb\x9b\x9b\xaf\xcd\xe3\x1a\xdf\xa9\x3a\xef\x75\x64\x93\x9c\xe3\xcd\x11\x18\x19\x11\x6a\xb7\x4e\xa8\x2f\x0d\x22\xd8\x50\x25\x21\x86\xbd\xbf\xa9\xdd\x8a\x79\x36\x6f\xaf\xa7\xd7\x4e\x00\x17\x80\x87\xe5\xcd\x19\xb7\x01\x50\x12\x32\x9f\x95\xcb\x71\x50\x72\xf7\xed\xdf\x2c\x0a\xbd\x86\xf0\x2c\x0d\xf1\x76\x8b\x45\x9b\xe4\xda\x4e\x1c\x32\xdb\x69\x5d\xa7\x8e\x2f\x33\x60\x3a\xba\x93\x2a\x8c\x22\x32\xf3\x60\x19\xe6\xae\x69\x36\x87\x99\x88\x37\xbb\xf4\xe5\xd9\xd8\x7c\x03\xc1\xca\x13\xe6\xa8\x64\x33\x48\x6a\xa1\x00\x73\x61\xdf\xbf\x38\xcc\xbb\xc9\xe2\x29\x27\xd4\xbb\x1d\x5c\x98\xf8\x49\x86\x18\x71\xdc\xb2\xf0\x2b\xa1\x0b\xee\xcf\x86\xec\xe8\xf5\x2f\xad\x83\xd6\x11\xfc\x1f\xb4\x5a\x67\xfa\xff\xaf\x05\x22\x0d\xa5\x2d\x3d\x28\x37\x0e\x88\x1f\x32\xa0\xfa\xf5\xc1\xd1\x31\x84\x8b\x83\xe3\x93\xb3\x9f\x5f\xc3\xff\x5f\x7f\x34\x2c\xcc\x6c\x79\x2e\x2e\x34\xdf\x05\x61\x25\x50\x16\xa6\xe9\xf6\x6f\xfa\x9d\x2b\xac\x0d\xdb\xa0\xad\x91\xcb\x36\x3c\xf9\x90\x10\x71\xc8\xca\x13\x1e\x58\x1c\x99\xd8\x46\xa6\x59\x45\x30\x91\x1e\x84\x70\x1c\xa3\xb0\x58\xda\xc3\xaa\x21\xeb\x09\x1e\xe1\x6b\x04\x3e\xf9\x20\xe8\x94\x8b\x10\xb6\xec\x45\x12\x48\xae\x66\x21\x40\xa0\x5f\x15\xc5\x05\x75\x69\x23\x1d\x94\x20\x3e\x64\x63\xcf\xff\x82\x6a\xa7\x0d\x04\xc6\x67\x98\xd6\x14\x97\xf4\xa4\x8c\xe7\xfa\xb4\x1f\x54\x1a\x3e\x80\x0b\x96\x3a\xc9\x3a\x6d\x25\x5b\x01\x62\x55\x8e\xe7\x24\x61\x13\x66\x47\xd4\x5b\x64\xa4\x0a\x0c\x61\xe5\x1c\x60\x83\xe5\xda\x23\x92\x1b\x7b\xc7\xb8\x3b\x0e\xb6\x82\x79\x47\x42\x42\x06\x46\x71\xd1\x89\xb6\x37\x8a\x0a\xe0\xac\x31\xbc\x4e\x80\x89\x9a\x32\x64\x15\xaa\x42\x4a\x34\xa5\xf9\x3a\xf9\xf7\x2b\x84\x02\xef\xd6\xc8\x72\x3c\xb6\xd1\x17\x31\x95\x45\x49\x20\xf8\x06\x24\xe7\x40\xb9\x8c\x85\x35\xcc\xf0\x88\x76\x19\xb0\xc4\x17\xda\xb4\x2a\x1a\xb9\x82\xb2\x92\x9b\xf7\x17\xe4\xe4\xe4\xe4\x35\x1e\x41\x50\x7b\x02\x8e\x21\x6e\x9f\x52\xf2\x8f\xe4\xbe\xce\x6a\xb5\x6a\x86\x54\x4d\xf4\x5d\x1d\x31\xf1\xf1\x07\x27\x35\xd5\x57\xf5\x5b\xed\x21\xa3\xea\x55\x51\x73\x21\x12\xea\x75\xfb\x9d\xff\x25\x77\xa8\x37\xb5\xfa\x5d\x49\xd0\x93\x5e\x18\xb6\x8e\x2e\x7d\x06\x77\xae\x46\x56\x66\x35\x3d\xff\xfa\xf6\xea\xaa\x5e\x2f\x1d\xa7\x55\xb7\xd6\xaa\xbf\x79\x58\x7c\x66\xb1\x9a\x52\x85\x60\xf8\x04\xf2\x19\x17\xbb\xe4\x34\x14\xfa\xc0\x2e\x12\xb5\xb4\x6b\xe6\xc6\x9b\xa0\x53\x2d\x1b\x44\xe3\xf5\xe6\x87\x49\x5b\x36\xd5\x12\x9f\xb6\x51\x66\x06\x81\xbf\xf4\xc9\x4f\x3a\x8a\xc9\x53\x7a\x52\x49\xe9\xe7\x90\x9d\x1c\x93\xbb\x0f\x54\xf5\xf5\xf7\x0e\x60\xf7\xb9\x7c\x1f\x46\x74\x50\x10\xc9\xfb\xce\x55\x7b\xd0\xf9\xd4\x26\x13\x65\x11\xa9\x9a\x64\x28\x9f\xa8\x04\xe1\xdb\xce\xf5\xe0\xf4\x15\xe0\xed\x7f\xc1\xc8\xb1\x56\xab\x99\x96\xfa\x44\x35\x83\xd5\x5f\xc2\xe9\xec\x12\x74\x11\xa7\xd6\x6d\x8c\x68\x23\xc5\x93\xe3\x3a\xf9\x3f\xa2\x47\x5d\xf1\x55\x32\x28\xe5\xe4\xe1\x21\x44\x0e\x9f\xf5\xdd\x16\xa9\xa1\xe3\x46\x03\xe2\x1d\x6f\x08\xc1\x45\x32\x40\x5b\x75\x72\x74\xba\xb9\x03\x53\x68\x38\xfd\xe8\xf4\xd5\xab\x57\xbf\x9c\x9c\x02\x98\xc4\x20\x8c\xe9\x04\xbf\xbb\x22\xf3\x0d\xa4\xd4\x35\xfc\x98\x78\x6b\x86\x15\xc0\x15\xc3\x9f\xc3\x34\x08\xad\x43\x1e\xe6\xa0\x73\x8f\x6e\x23\x1c\xe4\x57\x02\xe7\x7f\x1c\x38\x5a\x25\xea\x79\x95\x78\x55\xa9\x12\x78\x13\x88\xdc\x19\xc9\x36\xfd\x58\x08\xbc\x9f\x0d\x43\x3e\x41\x7c\x10\x4a\x57\x25\xd0\x82\x82\x79\xc5\x66\x90\x6b\xf5\x8c\x6d\xba\x0f\x13\xb3\x84\x9c\xd1\xd5\xbb\x38\x8c\x02\x2a\x6a\x75\xa4\xad\x6f\x99\x64\xd7\x30\xbc\xa9\x27\x81\x33\x21\x38\xe6\xda\x90\x0f\x96\x17\x89\xb7\x23\x0d\xf5\x96\x72\xcd\x84\x7a\x73\x8c\x90\x2d\x32\x19\x1f\x7e\xae\xe4\x83\x25\x24\x71\xad\xa4\xb7\x86\xb8\x92\xa5\xc4\x33\xbe\x02\xdc\xb5\xc3\x33\xd6\xcb\xda\x86\x34\xa9\x02\x8c\x6a\x30\xc8\xb6\x27\x79\x13\xb6\x62\x33\x26\xd9\x66\xa8\xc1\xf2\xa7\x9f\x5e\xd7\x0b\xd2\x75\x59\x53\xb3\x83\xdf\xda\xbf\x0d\x03\xf0\xad\xfe\x6d\xbf\xf8\x43\x7f\xe1\xcf\x8b\xef\x2f\xfe\x3f\x00\x00\xff\xff\x05\x88\x9e\x6f\xe1\x4d\x00\x00")

func rpcSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_rpcSwaggerJson,
		"rpc.swagger.json",
	)
}

func rpcSwaggerJson() (*asset, error) {
	bytes, err := rpcSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rpc.swagger.json", size: 19937, mode: os.FileMode(420), modTime: time.Unix(1466706058, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"rpc.swagger.json": rpcSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"rpc.swagger.json": &bintree{rpcSwaggerJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

