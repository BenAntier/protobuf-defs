// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package com.publica.storm.s3.proto;

public interface ErrorOrBuilder extends
    // @@protoc_insertion_point(interface_extends:logger.Error)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional uint32 error_code = 1;</code>
   */
  int getErrorCode();

  /**
   * <code>optional .google.protobuf.Timestamp timestamp = 2;</code>
   */
  boolean hasTimestamp();
  /**
   * <code>optional .google.protobuf.Timestamp timestamp = 2;</code>
   */
  com.google.protobuf.Timestamp getTimestamp();
  /**
   * <code>optional .google.protobuf.Timestamp timestamp = 2;</code>
   */
  com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

  /**
   * <code>optional .logger.Client client = 3;</code>
   */
  boolean hasClient();
  /**
   * <code>optional .logger.Client client = 3;</code>
   */
  com.publica.storm.s3.proto.Client getClient();
  /**
   * <code>optional .logger.Client client = 3;</code>
   */
  com.publica.storm.s3.proto.ClientOrBuilder getClientOrBuilder();

  /**
   * <code>optional .logger.User user = 4;</code>
   */
  boolean hasUser();
  /**
   * <code>optional .logger.User user = 4;</code>
   */
  com.publica.storm.s3.proto.User getUser();
  /**
   * <code>optional .logger.User user = 4;</code>
   */
  com.publica.storm.s3.proto.UserOrBuilder getUserOrBuilder();

  /**
   * <code>repeated .logger.Pair custom = 5;</code>
   */
  java.util.List<com.publica.storm.s3.proto.Pair> 
      getCustomList();
  /**
   * <code>repeated .logger.Pair custom = 5;</code>
   */
  com.publica.storm.s3.proto.Pair getCustom(int index);
  /**
   * <code>repeated .logger.Pair custom = 5;</code>
   */
  int getCustomCount();
  /**
   * <code>repeated .logger.Pair custom = 5;</code>
   */
  java.util.List<? extends com.publica.storm.s3.proto.PairOrBuilder> 
      getCustomOrBuilderList();
  /**
   * <code>repeated .logger.Pair custom = 5;</code>
   */
  com.publica.storm.s3.proto.PairOrBuilder getCustomOrBuilder(
      int index);
}
