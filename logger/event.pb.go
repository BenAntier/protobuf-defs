// Code generated by protoc-gen-go.
// source: event.proto
// DO NOT EDIT!

package logger

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Type defines the type of the event.
type Event_Type int32

const (
	Event_UNKNOWN           Event_Type = 0
	Event_BOOTLOADER_LOADED Event_Type = 100
	Event_SCRIPT_LOADED     Event_Type = 101
	Event_SESSION_PING      Event_Type = 200
	Event_PAGE_VIEW         Event_Type = 201
	Event_REQUEST           Event_Type = 300
	Event_UNFILLED          Event_Type = 301
	Event_FILLED            Event_Type = 302
	Event_IMPRESSION        Event_Type = 303
	Event_START             Event_Type = 400
	Event_SKIP              Event_Type = 401
	Event_CLICK             Event_Type = 402
	Event_QUARTILE1         Event_Type = 403
	Event_QUARTILE2         Event_Type = 404
	Event_QUARTILE3         Event_Type = 405
	Event_COMPLETE          Event_Type = 406
)

var Event_Type_name = map[int32]string{
	0:   "UNKNOWN",
	100: "BOOTLOADER_LOADED",
	101: "SCRIPT_LOADED",
	200: "SESSION_PING",
	201: "PAGE_VIEW",
	300: "REQUEST",
	301: "UNFILLED",
	302: "FILLED",
	303: "IMPRESSION",
	400: "START",
	401: "SKIP",
	402: "CLICK",
	403: "QUARTILE1",
	404: "QUARTILE2",
	405: "QUARTILE3",
	406: "COMPLETE",
}
var Event_Type_value = map[string]int32{
	"UNKNOWN":           0,
	"BOOTLOADER_LOADED": 100,
	"SCRIPT_LOADED":     101,
	"SESSION_PING":      200,
	"PAGE_VIEW":         201,
	"REQUEST":           300,
	"UNFILLED":          301,
	"FILLED":            302,
	"IMPRESSION":        303,
	"START":             400,
	"SKIP":              401,
	"CLICK":             402,
	"QUARTILE1":         403,
	"QUARTILE2":         404,
	"QUARTILE3":         405,
	"COMPLETE":          406,
}

func (x Event_Type) String() string {
	return proto.EnumName(Event_Type_name, int32(x))
}
func (Event_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 0} }

// Event defines a struct representing an 'event' that includes a type and all
// the related information.
type Event struct {
	// timestamp is the timestamp of when grpc-logger has recevied the message.
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	// type is an instance of Type enum as defined above.
	Type Event_Type `protobuf:"varint,2,opt,name=type,enum=logger.Event_Type" json:"type,omitempty"`
	// publisher is an instance of Publisher defined in publisher.proto.
	Publisher *Publisher `protobuf:"bytes,3,opt,name=publisher" json:"publisher,omitempty"`
	// user is an instance of User defined in user.proto.
	User *User `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
	// ad_request represents the ad_request that concerns this message. This is
	// only available for 300 <= type < 500
	AdRequest *AdRequest `protobuf:"bytes,5,opt,name=ad_request,json=adRequest" json:"ad_request,omitempty"`
	// custom is a map<string, string> that includes any data that a publisher
	// wishes to include with an event.
	Custom map[string]string `protobuf:"bytes,6,rep,name=custom" json:"custom,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// on_screen, if true, the event initiator was visible on the screen.
	OnScreen bool `protobuf:"varint,7,opt,name=on_screen,json=onScreen" json:"on_screen,omitempty"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *Event) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Event) GetPublisher() *Publisher {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *Event) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Event) GetAdRequest() *AdRequest {
	if m != nil {
		return m.AdRequest
	}
	return nil
}

func (m *Event) GetCustom() map[string]string {
	if m != nil {
		return m.Custom
	}
	return nil
}

func init() {
	proto.RegisterType((*Event)(nil), "logger.Event")
	proto.RegisterEnum("logger.Event_Type", Event_Type_name, Event_Type_value)
}

func init() { proto.RegisterFile("event.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x92, 0xcb, 0x6e, 0xda, 0x40,
	0x14, 0x86, 0xeb, 0x0b, 0x17, 0x1f, 0x48, 0x32, 0x1c, 0xb5, 0x92, 0x4b, 0x17, 0x45, 0x59, 0x54,
	0x5d, 0x99, 0x86, 0x6c, 0xd2, 0xee, 0x28, 0x99, 0x46, 0x16, 0x8e, 0xed, 0x8c, 0x4d, 0xb3, 0x44,
	0x10, 0xa6, 0x34, 0x2a, 0x60, 0x6a, 0xec, 0x48, 0xbc, 0x45, 0xef, 0x4f, 0xd1, 0xcb, 0x6b, 0xb4,
	0x8f, 0xd4, 0x45, 0xa5, 0x8e, 0xc7, 0x38, 0x84, 0x95, 0xe7, 0x3f, 0xff, 0x77, 0xce, 0x7f, 0x74,
	0x64, 0xa8, 0xf1, 0x1b, 0xbe, 0x48, 0xac, 0x65, 0x1c, 0x25, 0x11, 0x96, 0x67, 0xd1, 0x74, 0xca,
	0xe3, 0x26, 0x19, 0x4d, 0x86, 0x31, 0x7f, 0x9f, 0xf2, 0xd5, 0xc6, 0x69, 0x3e, 0x9e, 0x46, 0xd1,
	0x74, 0xc6, 0xdb, 0x52, 0x8d, 0xd3, 0x37, 0xed, 0xe4, 0x7a, 0x2e, 0xdc, 0xd1, 0x7c, 0xb9, 0x01,
	0x0e, 0x96, 0xe9, 0x78, 0x76, 0xbd, 0x7a, 0xcb, 0xe3, 0x4d, 0x01, 0xd2, 0x55, 0xf1, 0x3e, 0xfc,
	0xab, 0x43, 0x89, 0x66, 0x39, 0x78, 0x02, 0xc6, 0x6d, 0xa7, 0xa9, 0xb4, 0x94, 0xa7, 0xb5, 0x4e,
	0xd3, 0xca, 0x67, 0x5b, 0xc5, 0x6c, 0x2b, 0x2c, 0x08, 0xb6, 0x85, 0xf1, 0x09, 0xe8, 0xc9, 0x7a,
	0xc9, 0x4d, 0x55, 0x34, 0xed, 0x77, 0xd0, 0xca, 0x57, 0xb5, 0xe4, 0x58, 0x2b, 0x14, 0x0e, 0x93,
	0x3e, 0xb6, 0xc1, 0xb8, 0x5d, 0xc5, 0xd4, 0x64, 0x42, 0xa3, 0x80, 0xfd, 0xc2, 0x60, 0x5b, 0x06,
	0x5b, 0xa0, 0x67, 0xab, 0x9a, 0xba, 0x64, 0xeb, 0x05, 0x3b, 0x10, 0x35, 0x26, 0x1d, 0x7c, 0x06,
	0xb0, 0x3d, 0x88, 0x59, 0xda, 0x9d, 0xd9, 0x9d, 0xb0, 0xdc, 0x60, 0xc6, 0xa8, 0x78, 0xe2, 0x11,
	0x94, 0xaf, 0xd2, 0x55, 0x12, 0xcd, 0xcd, 0x72, 0x4b, 0x13, 0xf4, 0xc3, 0xdd, 0x75, 0x7b, 0xd2,
	0xa3, 0x8b, 0x24, 0x5e, 0xb3, 0x0d, 0x88, 0x8f, 0xc0, 0x88, 0x16, 0xc3, 0xd5, 0x55, 0xcc, 0xf9,
	0xc2, 0xac, 0x88, 0x8c, 0x2a, 0xab, 0x46, 0x8b, 0x40, 0xea, 0xe6, 0x73, 0xa8, 0xdd, 0xe9, 0x41,
	0x02, 0xda, 0x3b, 0xbe, 0x96, 0xf7, 0x33, 0x58, 0xf6, 0xc4, 0xfb, 0x50, 0xba, 0x19, 0xcd, 0xd2,
	0xfc, 0x3c, 0x06, 0xcb, 0xc5, 0x0b, 0xf5, 0x44, 0x39, 0xfc, 0xa7, 0x80, 0x9e, 0x9d, 0x07, 0x6b,
	0x50, 0x19, 0xb8, 0x7d, 0xd7, 0xbb, 0x74, 0xc9, 0x3d, 0x7c, 0x00, 0x8d, 0x97, 0x9e, 0x17, 0x3a,
	0x5e, 0xf7, 0x94, 0xb2, 0xa1, 0xfc, 0x9c, 0x92, 0x09, 0x36, 0x60, 0x2f, 0xe8, 0x31, 0xdb, 0x0f,
	0x8b, 0x12, 0x17, 0xa5, 0x7a, 0x40, 0x83, 0xc0, 0xf6, 0xdc, 0xa1, 0x6f, 0xbb, 0x67, 0xe4, 0xb7,
	0x82, 0xfb, 0x60, 0xf8, 0xdd, 0x33, 0x3a, 0x7c, 0x6d, 0xd3, 0x4b, 0xf2, 0x47, 0xc1, 0x3a, 0x54,
	0x18, 0xbd, 0x18, 0xd0, 0x20, 0x24, 0xdf, 0x55, 0xdc, 0x83, 0xea, 0xc0, 0x7d, 0x65, 0x3b, 0x8e,
	0x68, 0xff, 0xa1, 0x8a, 0xd8, 0xf2, 0x46, 0xfc, 0x54, 0xf1, 0x00, 0xc0, 0x3e, 0xf7, 0x59, 0x3e,
	0x8f, 0xfc, 0x52, 0x11, 0xa0, 0x14, 0x84, 0x5d, 0x16, 0x92, 0x0f, 0x1a, 0x1a, 0xa0, 0x07, 0x7d,
	0xdb, 0x27, 0x1f, 0xb5, 0xac, 0xdc, 0x73, 0xec, 0x5e, 0x9f, 0x7c, 0xd2, 0xb2, 0xb4, 0x8b, 0x81,
	0x40, 0x6c, 0x87, 0x1e, 0x91, 0xcf, 0x3b, 0xba, 0x43, 0xbe, 0xec, 0xe8, 0x63, 0xf2, 0x55, 0xcb,
	0xf2, 0x7b, 0xde, 0xb9, 0xef, 0xd0, 0x90, 0x92, 0x6f, 0xda, 0xb8, 0x2c, 0x7f, 0xab, 0xe3, 0xff,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xce, 0xd2, 0x2e, 0xd0, 0xe9, 0x02, 0x00, 0x00,
}
